#!/bin/sh
#
# Copyright (c) 2010 Abel Abraham Camarillo Ojeda <acamari@verlet.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

# gen_httpd_conf: This program generates a reasonable apache1 configuration
#		  section, crafted for your current environment, this
#		  configuration section tells Apache where to found the semece
#		  code, the URL that someone should send to apache to make it
#		  run semece, the semece libraries and the directory of data files
#		  (post's dir).

# Set to the username you wish to use
user=
# URL that a user should point to to run semece
# default: http://example.com/~$user/semece
location='/~$user/semece'
# This is the filesystem path where files can be found.
# It's asummed that there can be a direct relation between $location and $currd
currd=`pwd`
# If this file exists in the current directory then we are in the top directory
# of the semece source code
topf=".topd"

# Check if $currd is the top directory of the semece source code.
if ! test -e "$currd/$topf"; then
	error="Error: you aren't on the top directory of the semece "
	error="${error}directory; current directory ($currd); " 
	error="${error}change to the top directory of semece and re-run "
	error="${error}this program."
	echo "$error" >/dev/stderr
	exit 1;
fi

postd="$currd/../semece.postd"

# Deletes all trailing slashes from a variable, prints on stdout the variable
# without slashes, returns true if everything is OK, returns false if an error.
strip_slash()
{
	if echo "$1" | sed -e 's!/*$!!'; then
		return 0;
	else
		return 1;
	fi
}

# Guess the current user name, if it's empty
if test x"$user" != x; then
	user="$user"
elif test x"$LOGNAME" != x; then
	user="$LOGNAME";
elif test x"$USER" != x; then
	user="$USER";
elif _tmp=`id -un` && test x"$_tmp" != x; then
	user="$_tmp";
else
	echo "Error: \$user is empty!, stopped." >/dev/stderr
	exit 1
fi

if test x"$location" = x; then
	echo "Error: \$location is empty!, stopped." >/dev/stderr
	exit 1
elif eval "_tmp=\"$location\""; test x"$_tmp" = x; then
	echo "Error: expanding variables inside \$location ($location)" \
	    >/dev/stderr
	exit 1
elif ! location=`strip_slash "$_tmp"`; then
	echo "Error: stripping slashes in \$location ($_tmp)" \
	    >/dev/stderr
	exit 1
fi

cat <<END
# XXX: You should put this inside <VirtualHost *>...</VirtualHost>
# XXX: Feel free to edit this by hand.

# This is needed to fetch the static/* files
Alias $location/static $currd/static
<Location $location >
	AddDefaultCharset	UTF-8
	SetHandler		perl-script
	# Stores path of the perl startup file
	PerlRequire		$currd/startup.pl
	PerlHandler		Semece
	# Stores path of the data directory
	PerlSetVar		SemecePostd	$postd
	Options			+ExecCGI
</Location>
END
